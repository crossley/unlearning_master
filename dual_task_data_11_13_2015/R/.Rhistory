m_ac_record[1]
_ac <- record
m_ac_record
m_ac_record[1]
m_ac_record[[1]]
m_ac
warnings() 
summary(m_ac)
str(summary(m_ac))
m_ac_record
m_ac_record
m_ac_record
m_reac_record
_1
i
t
t
p_1
se_1
str(t)
se_2^2
p_1
p_2
sqrt(4)
t
(p_1-p_2) / sqrt(se_1^2 + se_2^2)
(p_1-p_2)
(p_1-p_2_)
p_1
summary(m_ac)
summary(m_ac)$df
str(summary(m_ac))
df_1
?data.table
for (i in 1:5) {

for (i in 1:5) {
for (i in 1:5) {
for (i in 1:5) {
for (i in 1:5) {
dd
d
d
d
d
g
fg
g
f
afdsa
f
fsd
af
dsa
gfsdsfgf
g
a
i}}}}
for (i in 1:5) {
for (i in 1:5) {
for (i in 1:5) {
for (i in 1:5) {
for (i in 1:5) {
for (i in 1:5) {
  C-c C-c
  C-c C-c  C-c C-c
  C-c C-c  C-c C-c  C-c C-c
  C-c C-c  C-c C-c  C-c C-c  C-c C-c
exp_model_stats
 m_record
m_record[[1]][[1]]
l
i
summary(m_record[[l]][[i]])
summary(m_record[[3]][[i]])
summary(m_record[[4]][[i]])
exp_model_stats <-data.table(p1=numeric(0),

str(data)
str(savings)
data$wmAcc
data$wmRT
any(data$wmRT==0)
data[, dt_acc := mean(wmAcc[trial %in% which(wmRT != 0), .(condition, subject)]

str(data[, mean(wmAcc[trial %in% which(wmRT != 0)]), .(condition, subject)])
data[, test := 1]

data[, mean(wmAcc[trial %in% which(wmRT != 0)]$V1), .(condition, subject)]

data[, mean(wmAcc[trial %in% which(wmRT != 0)]$V1), .(condition, subject)]

data[, mean(wmAcc[trial %in% which(wmRT != 0)]), .(condition, subject)]
str(data)
lm
data$dtacc
data[,]
data[, dtacc, .(condition, subject)]
str(data)
save
save
str(savings)
str(data)
data[, savings, .(condition, subject)]
data[, unique(savings), .(condition,subject)]
data[, unique(.(savings,dtacc)), .(condition,subject)]
data[, unique(.(savings,dtacc)), .(condition,subject)]
data[, c('condition', 'subject') := unique(.(condition,subject))]

data[, c('condition', 'subject') := unique(.(condition,subject))]


data[, c('savings','dtacc') := list(unique(savings),unique(dtacc)), .(condition, subject)]
str(data)
dt
dt
dt
dt
dt
data[condition==i, unique(savings), .(subject, dtacc)]
str(data)
kj  1 1
data <- exc
data_exc
data <- data.table(data_exc)
data
data[, reacmean]
data$rt
str(data)
str(data)
str(x)
str(x)
x[, .(condition, subject)]
data[, .(condition, subject)]
x[1:50]
data[1:50]
data[1:50, subject]
x
levels(x$winning_model)
levels(x$winning_model)
unique(x$winning_model)
x
mod
str(mod)
summary(mode=)
summary(mod)
mod
x
x[block %in% 1:6]

. + 
. + 

. + 
. + 
. + 
. + 
. + 
. +   C-c C-c
. +   C-c C-c  C-c C-c
. +   C-c C-c  C-c C-c  C-c C-c
. +   C-c C-c  C-c C-c  C-c C-c  C-c C-c
. +   C-c C-c  C-c C-c  C-c C-c  C-c C-c  C-c C-c
x
x
x$block
x2
mod
summary(mod)
anova(mod)
mod
str(mod)
mod
 mod
mod
x2
x2[condition=="1"]
mod
mod 
mod
mod
getwd()
data
data
subs_counts_pre
dt
data[condition==1 & subject==5]
data[condition==1 & subject==4]
data[condition==1 & subject==3]
data[condition==1, subject]
data[, unique(subject)]
data[,unique(subjects)]
data[,unique(subject)]
savings_per_block
data[, unique(subject),.(condition, subject)]
data[, unique(subject),.(condition)]
data[, .N,.(condition)]
data[, unique(subject),.(condition, subject)][,.N,condition]
savings_per_block
anov <- anova(fm)
anov
str(anov)
pt
str(pt)
anov
str(anov)
anov
anov$NumDF
anov$DenDF
str(anov)
anov$F.Value
anov$Df
anov$Sum Sq
anov$Sum
anov$Mean
anov$F
anov$DF
 str(anov)
sum(anov$Df)
sum(anov$Sum)
anov$Sum[1]
anov
anova$condition
anova$Sum
anovaSum
anov$Sum
anov
anov
anov
snov
anov
anov
k
fm <- lm(V1 ~ condition*block, data=savings_per_block)
anov <- anova(fm)
pairwise.t.test(savings$savings, savings$condition, alternative = 'greater', p.adjust.method = "none")

print('Effect of Condition ')
paste(sep='', 'F(', 
	round(anov$Df[1]), ',', 
	round(anov$Df[1]), ') = ', 
	format(round(anov$F[1], 2), nsmall=2), ', p = ', 
	format(round(anov$Pr[1], 2), nsmall=2), ', Omega = ',
	format(round(anov$Sum[1]/sum(anov$Sum), 2), nsmall=2)
	)

print('Effect of Block ')
paste(sep='', 'F(', 
	round(anov$Df[2]), ',', 
	round(anov$Df[2]), ') = ', 
	format(round(anov$F[2], 2), nsmall=2), ', p = ', 
	format(round(anov$Pr[2], 2), nsmall=2), ', Omega = ',
	format(round(anov$Sum[2]/sum(anov$Sum), 2), nsmall=2)
	)

print('Effect of Interaction')
paste(sep='', 'F(', 
	round(anov$Df[3]), ',', 
	round(anov$Df[3]), ') = ', 
	format(round(anov$F[3], 2), nsmall=2), ', p = ', 
	format(round(anov$Pr[3], 2), nsmall=2), ', Omega = ',
	format(round(anov$Sum[3]/sum(anov$Sum), 2), nsmall=2)
	)

?legend
?legend
savings
dt
dt
dt
dt[savings]
savings[dt]
dt
dt
savings
savings[condition %in% c(1:4)]
dt[condition %in% c(1:4)]
 warnings()
savings
dt
dt
dt
dt
 1
fm
str(fm)
plot(fm)
fm
dt
dt
int
data
int
savings
int
savings
k
int
ac
ac
subs_counts_pre
subs_counts
exc_subs
subs_counts[,sum(N)]
anov
anova(lm)
lm <- lm(V1 ~ dtacc*acmean*intmean,
lm <- lm(V1 ~ dtacc*acmean*intmean,lm <- lm(V1 ~ dtacc*acmean*intmean,
  C-c C-c
summary.aov(lm)
step(lm, direction="backward")
summary(lm)
str(d)
str(d)
mod
str(d)
d
str(d)
install.packages('rgl')
ls()
ls()
data
dd
dd
dd
hist(dd$savings)
dev.off()
hist(dd$savings)
dd
dd[, mean(savings), condition]
t.test(savings ~ condition, data=dd)
dd
fm <- lm(savings ~ condition, data=dd)
summary(fm)
aov(fm)
anova()
t.test(dd[condition==5, savings], dd[condition==4, savings])
?t.test
t.test(dd[condition==5, savings], dd[condition==4, savings], alternative='greater')
t.test(dd[condition==5, savings], dd[condition==4, savings], alternative='greater')
t.test(dd[condition==5, savings], dd[condition==2, savings], alternative='greater')
?pairwise.t.test
pairwise.t.test(dd, condition)
dd
pairwise.t.test(dd$savings, dd$condition)
pairwise.t.test(dd, condition)
?pairwise.t.test
?Sd
?sd
dd[, sd(savings), condition]
add
dd
dd[, savings, condition]
dd[, sd(savings), condition]
dd[, mean(savings), condition]
?sd
dd[, var(savings), condition]
dd[, mean(savings), condition]
dd[, savings, condition]
dd[, sd(savings), condition]
sd(dd$savings)
sd(dd[, savings])
sd(dd[, savings, condition])
dd[, err := sd(savings), condition]
dd
limits
ggplot(dd[, mean(savings), condition], aes(x=condition, y=V1)) +
  geom_bar(stat='identity') +
  geom_pointrange(limits) +

dd[, savings + err, condition]
limits
dd
dd[, mean(savings) + err[1], condition]
dd[, mean(savings) - err[1], condition]
limits
limits
limits
dd[, mean(savings) + err[1], condition]
dd[, mean(savings), condition] 
dd
 dd[, mean(savings), condition]
dd[, mean(savings), .(condition, err)]
subs_counts_pre
exc_subs
data
dev.off()
data[, unique(sub), condition]
data[, sub, condition]
data
data[, unique(subject), condition]
data[condition==3, unique(subject)]
dev.off()
data[condition==4, unique(subject)]
dd
dd
1:3
dd
dd[, cc := ifelse(condition==5, condition, 1)]
t.test(dd[condition==1, savings], dd[condition==5, savings])
t.test(dd[condition==1, savings], dd[condition==5, savings], alternative = 'greater')
t.test(dd[condition==1, savings], dd[condition==5, savings], alternative = 'less')
t.test(dd[cc==1, savings], dd[cc==5, savings], alternative = 'less')
dd
savings
savings[, mean(savings), condition]
dd
dd[, mean(savings), condition]
ggplot(dd, aes(x=factor(condition), y=savings)) +
  geom_boxplot() +
  geom_point() +
  geom_abline(slope=0, intercept=0, colour='red') +
  ylab('Savings') +
  xlab('Condition') +
  theme(axis.text.x=element_text(size=12),
        axis.text.y

data
savings
dd
boxplot(savings ~ condition, dd)
boxplot(savings ~ condition, savings)
boxplot(savings ~ condition, dd)
?anova
d
d[subject==102]
d[condition==1, .N, subject]
d[, .N, condition]
d
d
dd
dd
ddd
savings
getwd()
rm( list = ls() )
getwd()
ls()
data
ls()
subs_counts_failed
data[, unique(ppt)]
data[, unique(participant)]
str(data)
data[, unique(subject)]
data[, unique(subject), .(condition)]
data[, unique(subject), .(condition)][, .N, condition]
x
data[, unique(subject), .(condition)][, .N, condition]
dd
mod
savings
savings
d
d
subs_counts
30 + 34 + 32 + 34
30 + 34 + 32 + 33 + 34
5 + 6 + 3 + 4 + 7
2 + 2 + 7 + 8
23 + 26 + 22 + 21 + 27
subs_counts
23 + 22
data[, unique(subject)]
data[, unique(subject), condition]
data[, unique(subject), condition][,.N,.condition]
data[, unique(subject), condition][,.N,.(condition)]
t.test(ddd[condition==toString(i)]$V1,d[condition==toString(j)]$V1)
dd
dd
limits
limits
dd[, mean(savings) + err[1], condition]
dd[, mean(savings) + err, condition]
dd
?anova
ddd
d
d
ddd
xt
xt
x
subs_coutns
subs_counts
exc_subs
exc_subs[, unique(subject), condition]
data[, unique(subects), condition][,.N,condition]
data[, unique(subect), condition][,.N,condition]
data
data[, unique(subect), condition]
data[, unique(subject), condition][,.N,condition]
data[, unique(subject), condition][,.N,condition]
data[, unique(subject),condition][,.N,condition]
dd
data[, unique(block)]
2+2
anov$Sum[1]/sum(anov$Sum)
data
d
